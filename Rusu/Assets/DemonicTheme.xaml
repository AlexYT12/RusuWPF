<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:Rusu.Core"
                    xmlns:models="clr-namespace:Rusu.Models">
    <core:ConvertToBrushConverter x:Key="ToBrush"/>
    
    <Style TargetType="TextBlock" x:Key="DemonicTextBlock">
        <Setter Property="Foreground" Value="{Binding Path=(models:Theme.TextColor)}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="DemonicTextBlockVisible" BasedOn="{StaticResource DemonicTextBlock}">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="DemonicBorder">
        <Setter Property="Background" Value="{Binding Path=(models:Theme.BorderBackground)}"/>
        <Setter Property="BorderBrush" Value="{Binding Path=(models:Theme.BorderColor)}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="UnStyleButton">
        <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="10"
                            Margin="{Binding Margin, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                        Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DemonicButton" TargetType="Button">
        <Setter Property="Template" Value="{StaticResource UnStyleButton}"/>
        <Setter Property="Background" Value="{Binding Path=(models:Theme.ButtonBackground)}"/>
        <Setter Property="Foreground" Value="{Binding Path=(models:Theme.TextColor)}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=(models:Theme.ButtonMouseOverBackground)}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding Path=(models:Theme.ButtonPressedBackground)}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DemonicButtonNoBackground" TargetType="Button">
        <Setter Property="Template" Value="{StaticResource UnStyleButton}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding Path=(models:Theme.ButtonNoBackgroundColor)}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(models:Theme.ButtonNoBackgroundMouseOverColor)}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(models:Theme.ButtonNoBackgroundPressedColor)}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TextBox" x:Key="DemonicTextBox">
        <Setter Property="Background" Value="{Binding Path=(models:Theme.BorderBackground)}"/>
        <Setter Property="Foreground" Value="{Binding Path=(models:Theme.TextColor)}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="{Binding Path=(models:Theme.BorderColor)}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <ControlTemplate TargetType="RadioButton" x:Key="DemonicRadioButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Rectangle Width="2">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="{Binding Path=(models:Theme.RadioButtonDefaultColor)}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                <Setter Property="Fill" Value="{Binding Path=(models:Theme.RadioButtonSelectedColor)}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.Column="1"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>